// Code generated by mockery v2.42.3. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// ICalculator is an autogenerated mock type for the ICalculator type
type ICalculator struct {
	mock.Mock
}

// FindLoop provides a mock function with given fields: board
func (_m *ICalculator) FindLoop(board [][]int) [][]int {
	ret := _m.Called(board)

	if len(ret) == 0 {
		panic("no return value specified for FindLoop")
	}

	var r0 [][]int
	if rf, ok := ret.Get(0).(func([][]int) [][]int); ok {
		r0 = rf(board)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([][]int)
		}
	}

	return r0
}

// NewICalculator creates a new instance of ICalculator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewICalculator(t interface {
	mock.TestingT
	Cleanup(func())
}) *ICalculator {
	mock := &ICalculator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
