// Code generated by mockery v2.42.3. DO NOT EDIT.

package mocks

import (
	model "lab3/model"

	mock "github.com/stretchr/testify/mock"
)

// IUserService is an autogenerated mock type for the IUserService type
type IUserService struct {
	mock.Mock
}

// AuthenticateUser provides a mock function with given fields: userDto
func (_m *IUserService) AuthenticateUser(userDto model.UserDto) model.Token {
	ret := _m.Called(userDto)

	if len(ret) == 0 {
		panic("no return value specified for AuthenticateUser")
	}

	var r0 model.Token
	if rf, ok := ret.Get(0).(func(model.UserDto) model.Token); ok {
		r0 = rf(userDto)
	} else {
		r0 = ret.Get(0).(model.Token)
	}

	return r0
}

// CreateUser provides a mock function with given fields: userDto
func (_m *IUserService) CreateUser(userDto model.UserDto) {
	_m.Called(userDto)
}

// NewIUserService creates a new instance of IUserService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIUserService(t interface {
	mock.TestingT
	Cleanup(func())
}) *IUserService {
	mock := &IUserService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
